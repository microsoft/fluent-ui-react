version: 2
general:
  branches:
    ignore:
      - gh-pages
jobs:
  build:
    docker:
      - image: circleci/node:10-browsers
    environment:
      TZ: '/usr/share/zoneinfo/America/Los_Angeles'
    steps:
      - run:
          name: Update yarn
          command: |
            # remove default yarn
            sudo rm -rf $(dirname $(which yarn))/yarn*
            # download latest
            rm -rf ~/.yarn
            curl -o- -L https://yarnpkg.com/install.sh | bash
            echo 'export PATH="${PATH}:${HOME}/.yarn/bin"' >> $BASH_ENV
      - checkout
      # because we don't invoke npm (we use yarn) we need to add npm bin to PATH manually
      - run:
          name: Add npm bin to PATH
          command: echo 'export PATH="${PATH}:$(npm bin)"' >> $BASH_ENV

      - restore_cache:
          keys:
            - v1.1-dependencies-{{ checksum "yarn.lock" }}
            - v1.1-dependencies
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          key: v1.1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - .yarn-cache
            - node_modules

      - restore_cache:
          keys:
            - v1-json-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-json-{{ .Environment.CIRCLE_BRANCH }}
            - v1-json
      - run:
          name: Create JSON for docs & tests
          command: yarn gulp build:docs:json
      - save_cache:
          key: v1-json-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /tmp/gulp-cache

      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Prettier
          command: yarn prettier
      - run:
          name: Unit Tests
          command: yarn test
      - run:
          name: Report coverage
          command: bash <(curl -s https://codecov.io/bash)

      - run:
          name: E2E Tests
          command: yarn test:e2e

      - run:
          name: Project Tests
          command: yarn test:projects
      - run:
          name: Circular Dependencies Tests
          command: yarn test:circulars
      - run:
          name: Flamegrill
          command: |
            if [ $CIRCLE_BRANCH == 'master' ]; then
              yarn perf:test:base
            else
              yarn perf:test
            fi
      - run:
          name: Bundle Statistics (master only)
          command: |
            if [ $CIRCLE_BRANCH == 'master' ]; then
              yarn stats:build
            else
              echo 'skip bundle statistics collection'
            fi
      - run:
          name: Performance Tests (master only)
          command: |
            if [ $CIRCLE_BRANCH == 'master' ]; then yarn perf; fi
      - run:
          name: Save Statistics to DB (master only)
          command: |
            if [ $CIRCLE_BRANCH == 'master' ] && [ -n "${STATS_URI}" ]; then
              yarn stats:save --tag=`git tag --points-at HEAD`
            else
              echo 'skip saving statistics'
            fi
      - run:
          name: Danger JS
          command: |
            if [ ! -z $CIRCLE_PULL_REQUEST ] && [ ! -z $DANGER_GITHUB_API_TOKEN ]; then
              yarn danger ci
            fi
      - store_artifacts:
          path: packages/perf-test/dist
          destination: artifacts/perf
      - run:
          name: Publish npm package (master only)
          command: |
            if [ -n "${npm_TOKEN}" ] && [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "//registry.npmjs.org/:_authToken=${npm_TOKEN}" > ~/project/.npmrc
              yarn lerna publish --canary --preid "${CIRCLE_BUILD_NUM}.${CIRCLE_BRANCH}" --yes
            fi
